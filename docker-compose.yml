services:
  # Model Download Service - Downloads and initializes LLM model
  model-downloader:
    image: alpine:3.19
    container_name: cintara-model-downloader
    working_dir: /models
    command:
      - sh
      - -c
      - |
        if [ ! -f "/models/$$MODEL_FILE" ]; then
          echo "Downloading AI model..."
          apk add --no-cache wget
          wget -O "$$MODEL_FILE" "https://huggingface.co/TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF/resolve/main/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf"
          echo "Model download completed"
        else
          echo "Model already exists, skipping download"
        fi
    volumes:
      - ./models:/models
    environment:
      - MODEL_FILE=tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf
    networks:
      - cintara-network

  # LLM Server (CPU-based with llama.cpp)
  llama:
    image: ghcr.io/ggerganov/llama.cpp:server@sha256:42d562e394e22fc1b05d6f0ee9179b276b80a115217c8d668dc8c2fc5b1302ac
    container_name: cintara-llm
    restart: unless-stopped
    command:
      - --model
      - /models/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf
      - --ctx-size
      - "1024"
      - --threads
      - "4"
      - --host
      - 0.0.0.0
      - --port
      - "8000"
      - --n-predict
      - "256"
      - --verbose
    volumes:
      - ./models:/models:ro
    environment:
      - LLAMA_ARG_HOST=0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/health > /dev/null || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 120s
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 3G
        reservations:
          cpus: '1.0'
          memory: 2G
    depends_on:
      model-downloader:
        condition: service_completed_successfully
    networks:
      - cintara-network

  # AI Bridge - Connects to manually run Cintara node
  bridge:
    image: ${BRIDGE_IMAGE:-public.ecr.aws/b8j2u1c6/cintaraio/cintara-ai-bridge:latest}
    container_name: cintara-ai-bridge
    restart: unless-stopped
    environment:
      - LLAMA_SERVER_URL=http://llama:8000
      - CINTARA_NODE_URL=http://host.docker.internal:26657  # Connect to manually run node on host
      - LOG_PATH=/app/logs
      - AI_FEATURES_ENABLED=true
    ports:
      - "8080:8080"
    depends_on:
      llama:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8080/health > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cintara-network

# Networks
networks:
  cintara-network:
    driver: bridge

# Volumes
volumes:
  cintara_data:
    driver: local