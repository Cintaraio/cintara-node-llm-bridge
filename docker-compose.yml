services:
  # LLM Server (CPU-based with llama.cpp)
  llama:
    image: ${LLAMA_REPO:-ghcr.io/ggerganov/llama.cpp:server}@${LLAMA_DIGEST:-sha256:42d562e394e22fc1b05d6f0ee9179b276b80a115217c8d668dc8c2fc5b1302ac}
    container_name: cintara-llm
    restart: unless-stopped
    command: [
      "--model", "/models/${MODEL_FILE:-mistral-7b-instruct.Q4_K_M.gguf}",
      "--ctx-size", "${CTX_SIZE:-2048}",
      "--threads", "${LLM_THREADS:-4}",
      "--host", "0.0.0.0",
      "--port", "8000",
      "--n-predict", "512"
    ]
    volumes:
      - ./models:/models:ro
    environment:
      - LLAMA_ARG_HOST=0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/health > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "8000:8000"  # LLM API port
    deploy:
      resources:
        limits:
          cpus: '3.5'  # Use 3.5 out of 4 CPUs, leave some for system
          memory: 6G   # Reduced memory allocation
        reservations:
          cpus: '2.0'  # Reserve at least 2 CPUs
          memory: 4G

  # AI Bridge - Connects to host Cintara node
  bridge:
    build: ./bridge
    container_name: cintara-ai-bridge
    restart: unless-stopped
    environment:
      - LLAMA_SERVER_URL=http://llama:8000
      - CINTARA_NODE_URL=http://host.docker.internal:26657  # Connect to host node
      - LOG_PATH=/app/logs
      - AI_FEATURES_ENABLED=true
    depends_on:
      llama:
        condition: service_healthy
    ports:
      - "8080:8080"  # AI Bridge API
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8080/health > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'  # Bridge needs minimal CPU
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M