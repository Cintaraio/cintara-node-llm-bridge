name: SecretVM Reproducible Build

on:
  push:
    branches: [ main, feat/unified-automated-setup ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: public.ecr.aws
  REGISTRY_ALIAS: b8j2u1c6
  NAMESPACE: cintaraio
  IMAGE_NAME: cintara-unified-secretvm

jobs:
  build-secretvm:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64  # SecretVM requires x86_64 only

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # ECR Public is always in us-east-1

    - name: Login to Amazon ECR Public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Generate build info
      id: build-info
      run: |
        echo "BUILD_TIMESTAMP=$(date -Iseconds)" >> $GITHUB_OUTPUT
        echo "GIT_COMMIT=${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "GIT_TAG=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "DOCKERFILE_HASH=$(sha256sum Dockerfile.secretvm | cut -d' ' -f1)" >> $GITHUB_OUTPUT

    - name: Create checksums file
      run: |
        # Generate checksums for critical files
        mkdir -p build-artifacts
        sha256sum Dockerfile.secretvm > build-artifacts/checksums.txt
        sha256sum docker-compose.secretvm.yml >> build-artifacts/checksums.txt
        sha256sum bridge/app.py >> build-artifacts/checksums.txt
        sha256sum cintara-node/node-config.env >> build-artifacts/checksums.txt

        # Add build metadata
        cat > build-artifacts/build-metadata.json << EOF
        {
          "timestamp": "${{ steps.build-info.outputs.BUILD_TIMESTAMP }}",
          "git_commit": "${{ steps.build-info.outputs.GIT_COMMIT }}",
          "git_tag": "${{ steps.build-info.outputs.GIT_TAG }}",
          "dockerfile_hash": "${{ steps.build-info.outputs.DOCKERFILE_HASH }}",
          "github_run_id": "${{ github.run_id }}",
          "github_run_attempt": "${{ github.run_attempt }}",
          "actor": "${{ github.actor }}",
          "ref": "${{ github.ref }}",
          "platform": "linux/amd64",
          "secretvm_compatible": true
        }
        EOF

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.secretvm
        platforms: linux/amd64  # SecretVM requirement
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_TIMESTAMP=${{ steps.build-info.outputs.BUILD_TIMESTAMP }}
          GIT_COMMIT=${{ steps.build-info.outputs.GIT_COMMIT }}
          GIT_TAG=${{ steps.build-info.outputs.GIT_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: true
        sbom: true

    - name: Generate image manifest
      run: |
        # Get image digest
        IMAGE_DIGEST=$(docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} --format '{{.Manifest.Digest}}')

        # Create attestation manifest
        cat > build-artifacts/image-manifest.json << EOF
        {
          "image": "${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}",
          "tags": $(echo '${{ steps.meta.outputs.tags }}' | jq -R -s -c 'split("\n") | map(select(length > 0))'),
          "digest": "${IMAGE_DIGEST}",
          "platform": "linux/amd64",
          "build_info": $(cat build-artifacts/build-metadata.json),
          "attestation": {
            "reproducible_build": true,
            "secretvm_compatible": true,
            "tee_requirements": {
              "intel_sgx": ">=2.0",
              "intel_tdx": ">=1.0",
              "amd_sev": ">=1.0"
            }
          }
        }
        EOF

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: secretvm-build-artifacts-${{ github.sha }}
        path: build-artifacts/
        retention-days: 90

    - name: Security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Create release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: SecretVM Release ${{ github.ref_name }}
        body: |
          ## SecretVM-Compatible Release

          This release provides a reproducible build of the Cintara Unified Node optimized for SecretVM deployment.

          ### Image Information
          - **Image**: `${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}`
          - **Platform**: linux/amd64 (Intel SGX/TDX, AMD SEV compatible)
          - **Build Timestamp**: ${{ steps.build-info.outputs.BUILD_TIMESTAMP }}
          - **Git Commit**: ${{ steps.build-info.outputs.GIT_COMMIT }}

          ### SecretVM Compatibility
          - ✅ Intel SGX 2.0+
          - ✅ Intel TDX 1.0+
          - ✅ AMD SEV 1.0+
          - ✅ Reproducible build
          - ✅ Attestation support

          ### Usage
          ```bash
          # Deploy to SecretVM
          docker run -d --name cintara-secretvm \
            -p 26657:26657 -p 8000:8000 -p 8080:8080 -p 9999:9999 \
            ${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          ```

          ### Verification
          Build artifacts and checksums are available in the GitHub Actions artifacts.
        draft: false
        prerelease: false