name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  schedule:
    # Rebuild weekly to get security updates
    - cron: '0 0 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PREFIX: cintaraio

jobs:
  build-cintara-node:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}/cintara-node
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Cintara Node image
      uses: docker/build-push-action@v5
      with:
        context: ./cintara-node
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-ai-bridge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}/cintara-ai-bridge
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push AI Bridge image
      uses: docker/build-push-action@v5
      with:
        context: ./bridge
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-compose:
    runs-on: ubuntu-latest
    needs: [build-cintara-node, build-ai-bridge]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update docker-compose.yml with new image tags
      run: |
        # Extract the current commit SHA for tagging
        SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)

        # Update default image tags in docker-compose.yml
        sed -i "s|ghcr.io/cintaraio/cintara-node:latest|ghcr.io/cintaraio/cintara-node:main|g" docker-compose.yml
        sed -i "s|ghcr.io/cintaraio/cintara-ai-bridge:latest|ghcr.io/cintaraio/cintara-ai-bridge:main|g" docker-compose.yml

        # Update .env.example as well
        sed -i "s|ghcr.io/cintaraio/cintara-node:latest|ghcr.io/cintaraio/cintara-node:main|g" .env.example
        sed -i "s|ghcr.io/cintaraio/cintara-ai-bridge:latest|ghcr.io/cintaraio/cintara-ai-bridge:main|g" .env.example

    - name: Commit updated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose.yml .env.example
        git diff --staged --quiet || git commit -m "Update image tags to main branch [skip ci]"
        git push