name: Build and Push Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  NAMESPACE: ${{ github.repository_owner }}

jobs:
  build-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        image:
          - name: cintara-node
            context: ./cintara-node
            dockerfile: ./cintara-node/Dockerfile
          - name: cintara-ai-bridge
            context: ./bridge
            dockerfile: ./bridge/Dockerfile

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ matrix.image.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-,suffix=-{{date 'YYYYMMDD'}},format=short

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.image.context }}
        file: ${{ matrix.image.dockerfile }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate image summary
      run: |
        echo "## 🐳 Built Image: ${{ matrix.image.name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ matrix.image.name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
        echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY

  update-compose-file:
    runs-on: ubuntu-latest
    needs: build-images
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Update docker-compose.yml with latest images
      run: |
        # Extract current branch/tag for image references
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG=${GITHUB_REF#refs/tags/}
        else
          TAG="main"
        fi

        echo "Updating docker-compose.yml to use images with tag: $TAG"

        # Update the default image references in docker-compose.yml
        sed -i "s|ghcr.io/cintaraio/cintara-node:.*|ghcr.io/cintaraio/cintara-node:$TAG}|g" docker-compose.yml
        sed -i "s|ghcr.io/cintaraio/cintara-ai-bridge:.*|ghcr.io/cintaraio/cintara-ai-bridge:$TAG}|g" docker-compose.yml

        # Update .env.example as well
        sed -i "s|ghcr.io/cintaraio/cintara-node:.*|ghcr.io/cintaraio/cintara-node:$TAG|g" .env.example
        sed -i "s|ghcr.io/cintaraio/cintara-ai-bridge:.*|ghcr.io/cintaraio/cintara-ai-bridge:$TAG|g" .env.example

    - name: Commit updated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose.yml .env.example

        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Pull latest changes to avoid conflicts
          git pull --rebase origin main || {
            echo "Rebase failed, trying merge strategy"
            git rebase --abort
            git pull origin main
          }

          git commit -m "🚀 Update image references to latest build [skip ci]"

          # Retry push with conflict resolution
          for i in {1..3}; do
            if git push; then
              echo "Successfully pushed changes"
              break
            else
              echo "Push attempt $i failed, pulling and retrying..."
              git pull --rebase origin main || {
                echo "Rebase failed, trying merge strategy"
                git rebase --abort
                git pull origin main
              }
              if [ $i -eq 3 ]; then
                echo "Failed to push after 3 attempts"
                exit 1
              fi
            fi
          done
        fi

  security-scan:
    runs-on: ubuntu-latest
    needs: build-images
    if: github.event_name == 'push'
    permissions:
      security-events: write

    strategy:
      matrix:
        image: [cintara-node, cintara-ai-bridge]

    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/cintaraio/${{ matrix.image }}:main'
        format: 'sarif'
        output: 'trivy-results-${{ matrix.image }}.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results-${{ matrix.image }}.sarif'